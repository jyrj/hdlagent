lec_filter_function: resources.common.filter_functions.comment_filter_function

responses:
  suggest_prefix: |
    
    I have seen this error message before for a previous program I wrote. This was the old error I had with the previous program:

  spec_to_prompt: |
    
    {description}
    Implement in accordance to this (Verilog style) interface: 
    {interface}
    
  request_spec_description: |
    
    Rewrite the following RTL program description into a formal specification document, focusing on clarity and maintaining specific details. The format should be a bullet point list written in natural english, and should be as long as the description is complex. Do not response with ANYTHING BESIDES the bullet point list. Maintain the module and IO names exactly as they were stated in my original description:
    {prompt}
    
  request_spec_interface: |
    
    Write a Verilog module interface for the previous program description. Respond with nothing else but a SINGLE LINE code block that is the module interface declaration, without any comments or additional english explanation. Maintain the module and IO names exactly as they were stated in my original description and declare the port directions as input or output, do NOT put 'endmodule'.
    
  request_testbench: |
  
    I have a Verilog module that was implemented given the following requirements:
    {prompt}
    The interface of the module is:
    {interface}
    Write an assertion based testbench for this module. Assert statements should test both simple and corner cases of the implementation for functional correctness. Do not include additional english explanation, just the code block. Keep comments short and at a minimum.

  compile_testbench_iteration: |
    
    That program caught a compiler error:
    {compiler_output}
    Fix it and return the corrected program in its entirety.
    
  testbench_fail_iteration: |
    
    The program you just wrote, to verify it follows the previously mentioned intended behavior, was run against this Verilog testbench:
    ```
    {testbench}
    ```
    and this error message, due to a failed test case, was received:
    ```
    {feedback}
    ```
    Can you rewrite the program in its entirety to follow the previously mentioned intended behavior and pass the verification test bench.
    All previously mentioned constraints on naming and input/output interfacing still apply.
    
